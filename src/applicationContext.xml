<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd"
       default-autowire="byName">
       
    <description>
        This is the main Spring configuration file with some of the main "core" classes defined. 
    </description>
    
    <context:component-scan base-package="com.n3.logic" />
    <context:component-scan base-package="com.n3.dao" />
    <context:component-scan base-package="com.n3.rest" />
    
    <bean class="com.n3.util.ApplicationContextHolder" />

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:jdbc.properties</value>
			</list>
		</property>
	</bean>
		
	<!-- 数据源定义,使用Apache DBCP 连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="initialSize" value="1" /><!-- 初始化连接:连接池启动时创建的初始化连接数量 -->
		<property name="maxActive" value="20" /><!-- 最大活动连接:连接池在同一时间能够分配的最大活动连接的数量, 如果设置为非正数则表示不限制 -->
		<property name="maxIdle" value="20" /> <!-- 最大空闲连接:连接池中容许保持空闲状态的最大连接数量,超过的空闲连接将被释放,如果设置为负数表示不限制 -->
		<property name="minIdle" value="1" /><!-- 最小空闲连接:连接池中容许保持空闲状态的最小连接数量,低于这个数量将创建新的连接,如果设置为0则不创建 -->
		<property name="maxWait" value="10000" /><!-- 最大等待时间:当没有可用连接时,连接池等待连接被归还的最大时间(以毫秒计数),超过时间则抛出异常,如果设置为-1表示无限等待 -->
		<property name="minEvictableIdleTimeMillis" value="200000" /><!--进行连接空闲时间判断配置。-->
		<property name="timeBetweenEvictionRunsMillis" value="200000" /><!-- 失效检查线程运行时间间隔 -->
		<property name="removeAbandoned" value="true"/><!-- 强制自我中断避免dbcp自身bug出现连接过久资源耗尽-->
		<property name="removeAbandonedTimeout" value="120"/><!-- 自我中断时间秒 -->
		<property name="logAbandoned" value="false"/> <!--记录中断事件 -->
		<property name="validationQuery" value="SELECT 1 FROM DUAL"/>
		<property name="testOnBorrow" value="true"/> <!-- 指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个. -->
		<property name="testOnReturn" value="true"/><!-- 指明是否在归还到池中前进行检验 -->
		<property name="testWhileIdle" value="true"/><!-- 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串 -->
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.n3.model</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<!-- 对log4j日志文件没什么鸟用，log4j格式由其配置文件统一定制 -->
				<!-- <prop key="hibernate.format_sql">true</prop> -->
				<prop key="javax.persistence.validation.mode">none</prop>
			</props>
		</property>
	</bean>
	
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
</beans>